---
- name: Create the k3d cluster
  hosts: all
  become: false
  tasks:
    - name: Create the k3d cluster
      ansible.builtin.command:
        cmd: "k3d cluster create iot --api-port 6550 -p '8081:80@loadbalancer'"
        creates: ~{{ ansible_user_id }}/.kube/config
    - name: Copy the manifest files to the server
      ansible.builtin.copy:
        src: "confs/"
        dest: ~{{ ansible_user }}/confs
        mode: preserve

- name: Create an ArgoCD stack
  hosts: all
  become: false
  vars:
    argocd_url: "https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml"
  tasks:
    - name: Create the argocd namespace
      kubernetes.core.k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present

    - name: Install ArgoCD manifests
      kubernetes.core.k8s:
        state: present
        src: "{{ argocd_url }}"
        namespace: argocd
        apply: true

    - name: Wait for ArgoCD resouces to be ready
      kubernetes.core.k8s:
        state: present
        src: "{{ argocd_url }}"
        namespace: argocd
        apply: true
        wait: true
        wait_timeout: 300

    - name: Patch ArgoCD deployment
      kubernetes.core.k8s:
        state: patched
        definition: "{{ lookup('file', 'confs/argocd-patch.yml') }}"

    - name: Apply ArgoCD ingress configuration
      kubernetes.core.k8s:
        state: present
        src: confs/ingress.yml


- name: Retrieve the ArgoCD admin password
  hosts: all
  become: false
  tasks:
    - name: Get the ArgoCD secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: argocd-initial-admin-secret
        namespace: argocd
      register: secret_data

    - name: Decode the secret
      ansible.builtin.set_fact:
        admin_password: "{{ secret_data.resources[0].data['password'] | b64decode }}"

    - name: Echo the decoded secret with formatting
      ansible.builtin.debug:
        msg: "ArgoCD admin password: {{ admin_password }}"

- name: Deploy the managed ArgoCD app
  hosts: all
  become: false
  tasks:
    - name: Create the dev namespace
      kubernetes.core.k8s:
        name: dev
        api_version: v1
        kind: Namespace
        state: present

    - name: Apply the app manifest
      kubernetes.core.k8s:
        state: present
        src: confs/playground-app.yml

---
- name: Determine architecture and perform setup
  hosts: all
  become: true
  vars:
    arch_mapping:
      x86_64: "amd64"
      aarch64: "arm64"
  tasks:
    - name: Determine architecture mapping
      ansible.builtin.set_fact:
        system_arch: "{{ arch_mapping[ansible_architecture] | default('unknown') }}"

    - name: Debug the mapped architecture
      ansible.builtin.debug:
        msg: "The system architecture is mapped to {{ system_arch }}"

- name: Install docker on the machine
  hosts: all
  become: true
  tasks:
    - name: Ensure keyrings folder exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Add Docker APT repository key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ system_arch }} signed-by=/etc/apt/keyrings/docker.asc] \
          https://download.docker.com/linux/debian/ {{ ansible_distribution_release }} stable"
        state: present
        update_cache: true
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add the current user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_env.SUDO_USER or ansible_user_id }}"
        groups: docker
        append: true

    - name: Ensure Docker service is running
      ansible.builtin.service:
        name: docker
        state: started

- name: Install miscellaneous Kubernetes packages
  hosts: all
  become: true
  tasks:
    - name: Install kubernetes-python
      ansible.builtin.apt:
        name: python3-kubernetes
        state: present

    - name: Retrieve the latest stable Kubernetes version
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: true
      register: version

    - name: Install kubectl
      ansible.builtin.get_url:
        url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/{{ system_arch }}/kubectl
        dest: /usr/bin/
        mode: "0755"

    - name: Configure kubectl autocomplete
      ansible.builtin.lineinfile:
        path: ~{{ ansible_env.SUDO_USER or ansible_user_id }}/.bashrc
        regexp: '\.\s+<\(kubectl completion bash\)'
        line: ". <(kubectl completion bash)"

    - name: Download k9s package
      ansible.builtin.get_url:
        url: https://github.com/derailed/k9s/releases/download/v0.32.7/k9s_linux_{{ system_arch }}.deb
        dest: /tmp/k9s.deb
        mode: "0755"

    - name: Install the k9s package
      ansible.builtin.apt:
        deb: /tmp/k9s.deb

- name: Install k3d
  hosts: all
  become: true
  tasks:
    - name: Download the k3d installation script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh
        dest: /tmp/k3d
        mode: "0755"

    - name: Install k3d
      ansible.builtin.command:
        cmd: "bash /tmp/k3d"
        creates: /usr/local/bin/k3d
